
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsH.js
 */
#pragma once

#include <react/renderer/components/view/ViewProps.h>
#include <react/renderer/core/PropsParserContext.h>

namespace facebook::react {

class KeyboardControllerViewProps final : public ViewProps {
 public:
  KeyboardControllerViewProps() = default;
  KeyboardControllerViewProps(const PropsParserContext& context, const KeyboardControllerViewProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  bool enabled{false};
  bool statusBarTranslucent{false};
  bool navigationBarTranslucent{false};
  bool preserveEdgeToEdge{false};
};

enum class KeyboardGestureAreaInterpolator { Linear, Ios };

static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, KeyboardGestureAreaInterpolator &result) {
  auto string = (std::string)value;
  if (string == "linear") { result = KeyboardGestureAreaInterpolator::Linear; return; }
  if (string == "ios") { result = KeyboardGestureAreaInterpolator::Ios; return; }
  abort();
}

static inline std::string toString(const KeyboardGestureAreaInterpolator &value) {
  switch (value) {
    case KeyboardGestureAreaInterpolator::Linear: return "linear";
    case KeyboardGestureAreaInterpolator::Ios: return "ios";
  }
}

class KeyboardGestureAreaProps final : public ViewProps {
 public:
  KeyboardGestureAreaProps() = default;
  KeyboardGestureAreaProps(const PropsParserContext& context, const KeyboardGestureAreaProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  KeyboardGestureAreaInterpolator interpolator{KeyboardGestureAreaInterpolator::Linear};
  bool showOnSwipeUp{false};
  bool enableSwipeToDismiss{false};
  double offset{0.0};
  std::string textInputNativeID{};
};

class OverKeyboardViewProps final : public ViewProps {
 public:
  OverKeyboardViewProps() = default;
  OverKeyboardViewProps(const PropsParserContext& context, const OverKeyboardViewProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  bool visible{false};
};

} // namespace facebook::react
